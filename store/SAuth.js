/**
 *    Store: SAuth
 *    Description: Manages user auth and logged in state.
 *
 *
 *  **THIS CODE WAS GENERATED BY A TOOL**
 * **eOcean vue nuxt generator
 *
 * This is an implementation of a store to implement login
 * functionality
 * -auth management
 * -login state management
 * -etc.
 */
import axios from 'axios'
import btoa from 'btoa'

export const state = () => ({
  isLoggedIn: false, //True iff user is logged in
  loginAPIEndpoint: '/api/login', //The endpoint for the login api (i.e. /api/login)
})

export const getters = {
  isLoggedIn: (state) => state.isLoggedIn, //True iff user is logged in
  loginAPIEndpoint: (state) => state.loginAPIEndpoint, //The endpoint for the login api (i.e. /api/login)
}

export const actions = {
  /*logs the user in to db*/
  doLogin: (ctx, value) => {
    axios
      .post(
        'http://localhost:9000/auth',
        {
          access_token: 'sKOnMMiaL1CTKmrFKuLJsqths9MYLfZQ',
        },
        {
          headers: {
            Authorization:
              'Basic ' + btoa('richard@eoceandata.com' + ':' + '123456'),
          },
        }
      )
      .then(function (response) {
        //Store token
        localStorage.setItem('h167', response.data.token)
        ctx.commit('token', response.data.token)

        //Store user.
        const updateStoreWithUser = (userData) => {
          ctx.commit('me', userData)
        }
        updateStoreWithUser(response.data.user)
      })
      .catch((err) => {
        console.log(err)
      })

    ctx.commit('isLoggedIn', true)
  },
  doLogout: (ctx, value) => {
    ctx.commit('isLoggedIn', false)
  },
}

export const mutations = {
  isLoggedIn: (state, value) => {
    state.isLoggedIn = value
  }, //True iff user is logged in
  loginAPIEndpoint: (state, value) => (state.loginAPIEndpoint = value), //The endpoint for the login api (i.e. /api/login)
  isLoggedIn: (state, value) => (state.isLoggedIn = value), //True iff user is logged in
  loginAPIEndpoint: (state, value) => (state.loginAPIEndpoint = value), //The endpoint for the login api (i.e. /api/login)
}
